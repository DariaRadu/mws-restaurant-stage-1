class DBHelper{static get DATABASE_URL(){return"http://localhost:1337"}static openDatabase(){if(navigator.serviceWorker)return idb.open("restaurants",2,e=>{switch(e.oldVersion){case 0:e.createObjectStore("restaurants",{keyPath:"id"});case 1:e.createObjectStore("reviews",{keyPath:"id"}).createIndex("restaurant","restaurant_id")}})}static fetchRestaurants(e){fetch(`${DBHelper.DATABASE_URL}/restaurants`).then(e=>e.json()).then(t=>{e(null,t)}).catch(t=>{e(t,null)})}static fetchRestaurantById(e,t){DBHelper.fetchRestaurants((a,r)=>{if(a)t(a,null);else{const a=r.find(t=>t.id==e);a?t(null,a):t("Restaurant does not exist",null)}})}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((a,r)=>{if(a)t(a,null);else{const a=r.filter(t=>t.cuisine_type==e);t(null,a)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((a,r)=>{if(a)t(a,null);else{const a=r.filter(t=>t.neighborhood==e);t(null,a)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,a){DBHelper.fetchRestaurants((r,n)=>{if(r)a(r,null);else{let r=n;"all"!=e&&(r=r.filter(t=>t.cuisine_type==e)),"all"!=t&&(r=r.filter(e=>e.neighborhood==t)),a(null,r)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,a)=>{if(t)e(t,null);else{const t=a.map((e,t)=>a[t].neighborhood),r=t.filter((e,a)=>t.indexOf(e)==a);e(null,r)}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,a)=>{if(t)e(t,null);else{const t=a.map((e,t)=>a[t].cuisine_type),r=t.filter((e,a)=>t.indexOf(e)==a);e(null,r)}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return`./images/${e.id}-500_small.jpg`}static imageSrcSetForRestaurant(e){return`./images/${e.id}-500_small.jpg 500w, /images/${e.id}-800_medium.jpg 800w`}static mapMarkerForRestaurant(e,t){const a=new L.marker([e.latlng.lat,e.latlng.lng],{title:e.name,alt:e.name,url:DBHelper.urlForRestaurant(e)});return a.addTo(newMap),a}static changeFavouriteStatus(e,t){fetch(`${DBHelper.DATABASE_URL}/restaurants/${e}/?is_favourite=${t}`,{method:"PUT"}).then(()=>{console.log("changed")})}static fetchReviews(e,t){fetch(`${DBHelper.DATABASE_URL}/reviews/?restaurant_id=${e}`).then(e=>e.json()).then(e=>{console.log(e),t(null,e)}).catch(e=>{t(e,null)})}static addReviewWhenOnline(e){localStorage.setItem("review",JSON.stringify(e)),window.addEventListener("online",()=>{let e=JSON.parse(localStorage.getItem("review")),t=[...document.querySelectorAll(".offline-review")];if(console.log(t),t.forEach(e=>{e.remove()}),null!==e){DBHelper.addReview(e),localStorage.removeItem("review"),document.querySelector("#reviews-list").appendChild(createReviewHTML(e))}})}static addReview(e){if(!navigator.onLine)return void DBHelper.addReviewWhenOnline(e);let t={method:"POST",body:JSON.stringify(e),headers:new Headers({"Content-Type":"application/json"})};fetch(`${DBHelper.DATABASE_URL}/reviews`,t).then(e=>{console.log(e)}).catch(e=>console.log("error:",e))}}